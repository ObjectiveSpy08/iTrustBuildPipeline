---
  - import_tasks: setup.yml
  
  - name: set timezone to America/New_York
    timezone:
      name: America/New_York
    become: true

  - name: Configure git email
    git_config:
      name: user.email
      value: sbhoyar@ncsu.edu
      scope: global

  - name: Configure git name
    git_config:
      name: user.name
      value: Shantanu Bhoyar
      scope: global
  
  - name: add github ssh key
    copy:
      src: files/id_rsa_github
      dest: /root/.ssh/id_rsa_github
      owner: root
      group: root
      mode: 0600
    become: true
  
  - name: check if src repo exists
    stat: 
      path: /jenkins-server/iTrust2-v4
    register: src_repo
  
  - name: Clone from GitHub
    git:
      repo: git@github.ncsu.edu:sbhoyar/iTrust2-v4.git
      dest: /jenkins-server/iTrust2-v4
      accept_hostkey: yes
      key_file: /root/.ssh/id_rsa_github
    when: src_repo.stat.exists == False
    become: true

  - name: Configure git post-receive push options
    command: chdir=/jenkins-server/iTrust2-v4 git config --local push.pushOption jenkins
    when: src_repo.stat.exists == False
  
  - name: Configure git post-receive push options
    command: chdir=/jenkins-server/iTrust2-v4 git config --local push.pushOption admin admin
    when: src_repo.stat.exists == False

  - name: Create bare repository for hook
    command: git init --bare /jenkins-server/iTrust2-v4/build/jenkins.git/
    become: true
    when: src_repo.stat.exists == False

  - name: Configure bare repo to receive push options
    git_config:
      name: receive.advertisePushOptions
      value: true
      scope: local
      repo: /jenkins-server/iTrust2-v4/build/jenkins.git/

  - name: Add jenkins remote url
    git_config:
      name: remote.jenkins.url
      value: build/jenkins.git/
      scope: local
      repo: /jenkins-server/iTrust2-v4/
  
  - name: Add jenkins remote refs
    git_config:
      name: remote.jenkins.fetch
      value: +refs/heads/*:refs/remotes/jenkins/*
      scope: local
      repo: /jenkins-server/iTrust2-v4/
  
  - name: Copy post receive hook to jenkins
    copy:
      src: templates/post-receive
      dest: /jenkins-server/iTrust2-v4/build/jenkins.git/hooks/
  
  - name: Copy Jenkinsfile for Jenkins use
    copy:
      src: files/Jenkinsfile
      dest: /jenkins-server/iTrust2-v4/iTrust2/Jenkinsfile
      
  - name: Copy db properties file for Jenkins use
    copy:
      src: files/db.properties
      dest: /jenkins-server/iTrust2-v4/iTrust2/src/main/java/db.properties

  - name: Copy email properties file for Jenkins use
    copy:
      src: files/email.properties
      dest: /jenkins-server/iTrust2-v4/iTrust2/src/main/java/email.properties  
  
  - name: Copy credentials upload script to jenkins server 
    copy:
      src: templates/copy_creds_to_jenkins.sh
      dest: /jenkins-server/copy_creds_to_jenkins.sh
    
  - name: Upolad db.properties to Jenkins credentials
    command: "/jenkins-server/copy_creds_to_jenkins.sh jenkins admin"

  - name: Install dependency
    package: "name=python-dev state=present"
    become: true
    
  - name: Set the python interpreter to the symlink (which points at version 2.7)
    set_fact:
      ansible_python_interpreter: '/usr/bin/python'
    become: true
    
  - name: Create a jenkins job using basic authentication
    jenkins_job:
      config: "{{ lookup('file', 'files/iTrustJenkinsConfig.xml') }}"
      name: itrust
      password: admin
      url: http://localhost:8081
      user: jenkins
      state: present
    become: true
  
  - name: Set the python interpreter back to version 3
    set_fact:
      ansible_python_interpreter: '/usr/bin/python3'
    become: true
